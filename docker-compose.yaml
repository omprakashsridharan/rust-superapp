version: "3.1"

services:
        db:
                container_name: rust-superapp-db
                image: postgres
                environment:
                        POSTGRES_USER: postgres
                        POSTGRES_PASSWORD: postgres
                        POSTGRES_DB: rust-superapp
                ports:
                        - "5433:5432"
                volumes:
                        - postgres_dev:/var/lib/postgresql/data

        broker:
                container_name: rust-superapp-broker
                image: confluentinc/cp-kafka:7.4.0
                hostname: broker
                depends_on:
                        - controller
                ports:
                        - "9092:9092"
                        - "9101:9101"
                environment:
                        KAFKA_NODE_ID: 1
                        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
                        KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092"
                        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
                        KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
                        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
                        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
                        KAFKA_JMX_PORT: 9101
                        KAFKA_JMX_HOSTNAME: localhost
                        KAFKA_PROCESS_ROLES: "broker"
                        KAFKA_CONTROLLER_QUORUM_VOTERS: "2@controller:9093"
                        KAFKA_LISTENERS: "PLAINTEXT://broker:29092,PLAINTEXT_HOST://0.0.0.0:9092"
                        KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
                        KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
                        KAFKA_LOG_DIRS: "/tmp/kraft-combined-logs"
                        # Replace CLUSTER_ID with a unique base64 UUID using "bin/kafka-storage.sh random-uuid"
                        # See https://docs.confluent.io/kafka/operations-tools/kafka-tools.html#kafka-storage-sh
                        CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"

        controller:
                container_name: rust-superapp-controller
                image: confluentinc/cp-kafka:7.4.0
                hostname: controller
                ports:
                        - "9093:9093"
                        - "9102:9102"
                environment:
                        KAFKA_NODE_ID: 2
                        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
                        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
                        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
                        KAFKA_JMX_PORT: 9102
                        KAFKA_JMX_HOSTNAME: localhost
                        KAFKA_PROCESS_ROLES: "controller"
                        KAFKA_CONTROLLER_QUORUM_VOTERS: "2@controller:9093"
                        KAFKA_LISTENERS: "CONTROLLER://controller:9093"
                        KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"
                        KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
                        KAFKA_LOG_DIRS: "/tmp/kraft-controller-logs"
                        # Replace CLUSTER_ID with a unique base64 UUID using "bin/kafka-storage.sh random-uuid"
                        # See https://docs.confluent.io/kafka/operations-tools/kafka-tools.html#kafka-storage-sh
                        CLUSTER_ID: "MkU3OEVBNTcwNTJENDM2Qk"

        schema-registry:
                container_name: rust-superapp-schema-registry
                image: confluentinc/cp-schema-registry:7.4.0
                hostname: schema-registry
                depends_on:
                        - broker
                        - controller
                ports:
                        - "8081:8081"
                environment:
                        SCHEMA_REGISTRY_HOST_NAME: schema-registry
                        SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "broker:29092"
                        SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

        kafka-ui:
                container_name: rust-superapp-kafka-ui
                image: provectuslabs/kafka-ui:latest
                ports:
                        - "9090:8080"
                depends_on:
                        - broker
                        - schema-registry
                environment:
                        KAFKA_CLUSTERS_0_NAME: local
                        KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: broker:29092
                        KAFKA_CLUSTERS_0_METRICS_PORT: 9997
                        KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8081
                        DYNAMIC_CONFIG_ENABLED: "true" # not necessary, added for tests

        zipkin-server:
                container_name: rust-superapp-zipkin-server
                image: openzipkin/zipkin
                ports:
                        - "9411:9411"

volumes:
        postgres_dev:
